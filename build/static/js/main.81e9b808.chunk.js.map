{"version":3,"sources":["components/Cards.js","components/SearchPage.js","components/FavouriteList.js","components/images/apple_logo.png","components/images/istore.png","components/HomePage.js","App.js","index.js"],"names":["Card","props","useState","isFavourite","setIsFavourite","display","setDisplay","click","setClicked","btnClicked","useEffect","i","className","Link","href","link","Img","src","imgThumbnail","Body","Title","name","Subtitle","id","kind","Text","artistName","Button","variant","onClick","sessionStorage","getItem","setItem","JSON","stringify","addFavourite","parse","newFavourite","key","length","alert","push","window","location","reload","addToFavourites","require","SearchPage","handleSubmit","bind","state","error","option","search","results","event","this","setState","preventDefault","fetch","method","headers","body","then","res","json","response","forceUpdate","console","log","catch","map","result","collectionId","trackViewUrl","trackName","artworkUrl100","collectionArtistId","onSubmit","type","placeholder","onChange","target","value","searchResults","React","Component","FavouriteList","favouritesList","count","e","index","delFav","splice","delFavourite","HomePage","style","height","logo","alt","mainLogo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81e9b808.chunk.js","sourcesContent":["/*this component serves to create the card which holds the information from all the search results from the API, as well as some functionality\nto allow a user to add items to a favourites list. */\n\nimport React, { useState, useEffect } from 'react';\n\n//some bootstrap components\nimport BootCard from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\n// this component uses state and has props passed in\nfunction Card(props) {\n    const [isFavourite, setIsFavourite] = useState(false);\n    const [display, setDisplay] = useState(false);\n    const [click, setClicked] = useState(false);\n\n    // this function assigns a class to the button so the colour is changed depending if it is clicked or not\n    let btnClicked = click ? 'button-clicked' : 'button-not-clicked';\n\n    // this function allows a user to add an item from the search results to their favourites list \n    function addToFavourites() {\n        if (sessionStorage.getItem('favouriteList') === null) {\n            const favourites = [];\n            sessionStorage.setItem('favouriteList', JSON.stringify(favourites));\n        }\n        // this variable holds the session storage data.\n        let addFavourite = JSON.parse(sessionStorage.getItem('favouriteList'));\n        setClicked(true);\n        // a new object is created and added to session storage\n        const newFavourite = {\n            id: props.id,\n            key: props.key,\n            kind: props.kind,\n            link: props.link,\n            name: props.name,\n            artistName: props.artistName,\n            imgThumbnail: props.imgThumbnail,\n        };\n\n        // this function stops users adding the same item to their favourites more than once\n        for (let i = 0; i < addFavourite.length; i++) {\n            if (addFavourite[i].name === newFavourite.name) {\n                setIsFavourite(!isFavourite);\n                alert(\"You've already added this item to your favourites\");\n                return;\n            }\n        }\n\n        // pushing the new object to the array, and updating the session storage. And also alerting the user that the item has been added to favourites\n        addFavourite.push(newFavourite)\n        sessionStorage.setItem('favouriteList', JSON.stringify(addFavourite));\n        alert('This Item added to Favorites');\n        setDisplay(true);\n        window.location.reload()\n    }\n\n    useEffect(() => {\n        if (display === true) {\n            for (let i = 0; i < 1; i++) {\n                setDisplay(false);\n            }\n        }\n    }, [isFavourite, display]\n    )\n\n    // making use of a bootstrap card component to put all of the data in an attractive way\n    return (\n        <BootCard className='display-card-body card-group mb-3 h-100'>\n            <div className='card'>\n                <BootCard.Link href={props.link}>\n                    <BootCard.Img src={props.imgThumbnail} className='card-img' />\n                </BootCard.Link>\n                <BootCard.Body>\n                    <BootCard.Title><strong>{props.name}</strong></BootCard.Title>\n                    <BootCard.Subtitle className='mb-2 text-muted'>{props.id}</BootCard.Subtitle>\n                    <BootCard.Subtitle className='mb-2 card-type'>{props.kind}</BootCard.Subtitle>\n                    <BootCard.Text>\n                        {props.artistName}\n                    </BootCard.Text>\n                    <Button variant=\"success\" className={`${btnClicked} card-links`} id=\"addFavBtn\" onClick={() => addToFavourites()}>Favourite <i className='far fa-heart'></i></Button>\n                </BootCard.Body>\n            </div>\n        </BootCard>\n    )\n}\n\nexport default Card;","//this search component allows the user to search the iStore catalogue by fetching the information from the API via the backend server\n//this component makes use of the card component that I created\n\nimport React from 'react'\nimport Card from './Cards';\n\n//bootstrap components\nimport Button from 'react-bootstrap/Button'\nrequire('isomorphic-fetch');\n\n\n// creating the component using state\nclass SearchPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            error: null,\n            option: 'all',\n            search: '',\n            results: [],\n            reload: false\n        }\n    }\n\n    // if the user presses the search button without entering any text they will recieve the following alert\n    handleSubmit(event) {\n        if (this.state.search === '') {\n            return alert('Please enter search details');\n        }\n        this.setState({ results: [] });\n        event.preventDefault();\n        fetch('/search', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                search: this.state.search,\n                option: this.state.option\n            })\n        })\n            .then(res => res.json())\n            .then(response => {\n                this.setState({ results: response })\n                this.forceUpdate();\n                console.log(this.state);\n            })\n            //if the server hasn't been started the user will recieve this alert\n            .catch(error => {\n                alert('Server is currently offline. Please try again later.');\n                this.setState(error);\n                console.log(error);\n            })\n    }\n\n    // Using the map method to create an output using the data passedin\n    searchResults() {\n        const results = this.state.results.results;\n        return (\n            results.map(result =>\n                <Card\n                    id={result.collectionId}\n                    key={result.collectionArtistId}\n                    kind={result.kind}\n                    link={result.trackViewUrl}\n                    name={result.trackName}\n                    artistName={result.artistName}\n                    imgThumbnail={result.artworkUrl100}\n                />)\n        )\n    }\n\n    // A basic form where the user can enter the search details and when the search button is clicked the cards are generated\n    render() {\n        return (\n            <div className='search-form' id='Search'>\n                <section className=\"two\">\n                    <div className=\"search\">\n                        <h4>Welcome to the Apple iStore <br /> Please browse our catalogues by searching below <br />\n                            Be sure to save your favourites to see them later </h4>\n                        <h1 className=\"search-head\">Search</h1>\n                        <form className='search-bar-form' onSubmit={this.handleSubmit}>\n                            <input type='text' placeholder='Search iStore' onChange={(event) => this.setState({ search: event.target.value })}></input>\n                            <div className='dropdown'>\n                                <select className='drop-btn form-select form-select-lg mb-3 mt-3' onChange={(event) => this.setState({ option: event.target.value })}>\n                                    <option value='all'>All</option>\n                                    <option value='movie'>Movies</option>\n                                    <option value='music'>Music</option>\n                                    <option value='podcast'>Podcasts</option>\n                                    <option value='audiobook'>Audiobook</option>\n                                    <option value='shortFilm'>Short Film</option>\n                                    <option value='tvShow'>TV Shows</option>\n                                    <option value='ebook'>Ebooks</option>\n                                </select>\n                            </div>\n                            <Button type='submit' variant=\"warning\" className='btn btn-info search-btn search-button'>Search <i className='fa fa-search'></i></Button>\n                        </form>\n                    </div>\n                </section>\n\n                <section className=\"results\">\n                    <div className='search-results' id='search-results'>\n                        {this.state.results.length !== 0 ? <div><h3 className=\"results-head\">Search Results</h3>{this.searchResults()}</div> : ''}\n                    </div>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default SearchPage","// this functional component makes use of the Card component created previously to create the users favourites list.\n\nimport React from 'react';\nimport Card from './Cards';\n\n//bootstrap components\nimport Button from 'react-bootstrap/Button'\n\nfunction FavouriteList() {\n    // giving the session storage a value as to avoid a null error\n    if (sessionStorage.getItem('favouriteList') === null) {\n        const favourites = [];\n        sessionStorage.setItem('favouriteList', JSON.stringify(favourites));\n    }\n\n    // creating a variable to store the session storage\n    let favouritesList = JSON.parse(sessionStorage.getItem('favouriteList'));\n    let count = 0;\n\n    // using the map method to make the data from session storage easily usable\n    // I have also created a button that uses the delete function below\n    function getFavourites() {\n        return (\n            favouritesList.map(result => {\n                count = count + 1;\n                return (\n                    <div className='fav-items-div'>\n                        <section className=\"favourites\">\n                            <div>\n                                <Card\n                                    id={result.id}\n                                    key={result.key}\n                                    kind={result.kind}\n                                    link={result.link}\n                                    name={result.name}\n                                    artistName={result.artistName}\n                                    imgThumbnail={result.imgThumbnail}\n                                />\n                                <br />\n                                <Button variant=\"danger\" className='btn btn-lg btn-info DeleteBtn' onClick={(e) => delFavourite(count)}>Delete</Button>\n                            </div>\n                        </section>\n                    </div>\n                )\n            }\n            ))\n    }\n\n    //this function deletes the selected item from the array and updates the session storage\n    function delFavourite(index) {\n        let delFav = [];\n        delFav = favouritesList.splice(index - 1, 1);\n        sessionStorage.setItem('favouriteList', JSON.stringify(delFav));\n        window.location.reload();\n    }\n\n    //using a ternary operator that triggers the getFavourites function when the has more than 1 object\n    return (\n        <div id='Favs'>\n            <section className=\"three\">\n                <div>\n                    <h1 className=\"fav-head\">Your favourite items are:</h1>\n                    <div className='search-results' id='search-results'>\n                        {favouritesList.length !== 0 ? getFavourites() : <h3>You dont have any favourites at the moment <br />\n                            Please select some favourites from the search results.</h3>}\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default FavouriteList","export default __webpack_public_path__ + \"static/media/apple_logo.e288ea4c.png\";","export default __webpack_public_path__ + \"static/media/istore.bd16d5c4.png\";","//this is a basic Homepage component with a navbar making it easy for users to scroll between different parts of the webpage\n\nimport React from 'react';\nimport logo from './images/apple_logo.png';\nimport mainLogo from './images/istore.png'\n\nfunction HomePage() {\n    return (\n        <div className='navbar-div'>\n            <nav className='navbar navbar-expand-lg navbar-dark'>\n                <div className='logo'>\n                    <img style={{ height: 30 }} src={logo} alt=\"logo\" />\n                </div>\n                <ul className='navbar-nav list-group'>\n                    <li className='nav-item'><a href='#Home'>Home</a></li>\n                    <li className='nav-item'><a href='#Search'>Search</a></li>\n                    <li className='nav-item'><a href='#Favs'>Favourites</a></li>\n                </ul>\n            </nav>\n            <img src={mainLogo} alt=\"\" />\n        </div>\n    )\n}\n\nexport default HomePage;\n\n","// importing all the relevant components needed to render\nimport React from 'react';\nimport SearchPage from './components/SearchPage'\nimport FavouriteList from './components/FavouriteList';\nimport HomePage from './components/HomePage';\n\n\n// App component is basically just the home component for all the other components\nfunction App() {\n  return (\n    <div className='App'>\n      <div className=\"holder\">\n        <section className=\"one\" id=\"Home\">\n          <header className='App-header'>\n            <HomePage />\n          </header>\n        </section>\n        <SearchPage />\n        <FavouriteList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}